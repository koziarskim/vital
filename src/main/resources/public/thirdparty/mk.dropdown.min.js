angular.module("mk.dropdown.tpl", []).run(["$templateCache", function (a) {
    a.put("templates/mk.dropdown.tpl.html", '' +
        '<div class="input-group"> ' +
        '<div id="buttonDiv" class={{buttonClass}}> ' +
        '<input ng-change="toggleDropdown()" ng-keydown="moveFocus($event)" ng-blur="setItem()" type="text" class="form-control" ' +
        'placeholder="{{placeholder}}" ng-model="itemValue" aria-label="..."> ' +
        '<ul id="dropdownUl" class="dropdown-menu"> ' +
        '<li ng-repeat="item in items | filter:filterOnLocation" ng-keydown="onKeyDown($event, item)" ng-click="onMouseDown(item)">' +
        '<a href="" ng-blur="setItem()">{{itemLabel?item[itemLabel]:item}}</a>' +
        '</li> ' +
        '</ul> ' +
        '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-blur="setItem()">' +
        '<span class="caret"></span>' +
        '</button> ' +
        '</div> ' +
        '</div>')
}]), angular.module("mk.dropdown", ["mk.dropdown.tpl"]).directive("mkDropdown", function () {
        return {
            templateUrl: "templates/mk.dropdown.tpl.html",
            scope: {
                itemValue: "=?",
                items: "=",
                itemLabel: "@?",
                itemId: "@?",
                item: "=?",
                placeholder: "@?"
            },
            replace: true,
            controller: ["$scope", "$q", function ($scope, $q) {
                $scope.buttonClass = "input-group-btn";

                if (!$scope.itemId) {
                    $scope.itemId = "id";
                }
                if($scope.item){
                    $scope.itemValue = $scope.item[$scope.itemLabel];
                }
                $scope.onKeyDown = function (event, item) {
                    if (event.which === 13) {
                        $scope.itemValue = angular.copy($scope.itemLabel?item[$scope.itemLabel]:item);
                    }
                };

                $scope.onMouseDown = function (item) {
                    $scope.itemValue = angular.copy($scope.itemLabel?item[$scope.itemLabel]:item);
                };

                $scope.toggleDropdown = function () {
                    $scope.buttonClass = "input-group-btn open";
                };

                $scope.setItem = function () {
                    $scope.item = null;
                    if ($scope.itemValue) {
                        if ($scope.itemLabel) {
                            $scope.items.forEach(function (it, index) {
                                if (it[$scope.itemLabel].toLowerCase() == $scope.itemValue.toLowerCase()) {
                                    $scope.item = it;
                                }
                            });
                        } else {
                            if ($scope.items.indexOf($scope.itemValue) > -1) {
                                $scope.item = angular.merge($scope.itemValue);
                            }
                        }
                    }
                }

                $scope.moveFocus = function (event) {
                    $scope.toggleDropdown();
                    if (event.which === 40) {
                        var element = angular.element(document.querySelector(' #dropdownUl'));
                        setTimeout(function () {
                            element.find("a:first").focus();
                        }, 100);
                    }
                };
                $scope.filterOnLocation = function (item) {
                    if ($scope.itemValue) {
                        var match = null;
                        if($scope.itemLabel) {
                            match = (item[$scope.itemLabel]).toLowerCase().indexOf($scope.itemValue.toLowerCase()) >= 0;
                        }else{
                            match = item.toLowerCase().indexOf($scope.itemValue.toLowerCase()) >= 0;
                        }
                        return match;
                    } else {
                        return true;
                    }
                };
            }
            ]
        }
    }
);