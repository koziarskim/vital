/*! gm.typeaheadDropdown - v1.0.0 - 2015-01-30 */
angular.module("mk.typeahead.tpl", []).run(["$templateCache", function (a) {
    a.put("templates/mk.typeahead.tpl.html", '' +
        '<div class=dropdown uib-dropdown>' +
            '<div class=input-group>' +
                '<input class=form-control placeholder="Select or type..." ng-model=model[itemLabel] ng-change="onChange(model[itemLabel])" uib-typeahead="op[itemLabel] for op in items | filter:$viewValue | limitTo:8" uib-typeahead-editable=false uib-typeahead-on-select="onSelect($item, $model, $label)"> ' +
                    '<span class=input-group-btn>' +
                        '<button class="btn btn-default dropdown-toggle" uib-dropdown-toggle>' +
                            '<span class=caret></span>' +
                        '</button>' +
                    '</span>' +
                '</div>' +
                '<ul class=dropdown-menu role=menu style=max-height:200px;overflow-y:auto>' +
                    '<li ng-repeat="op in items">' +
                        '<a href ng-click="onSelect(op)">{{op[itemLabel]}}</a>' +
                    '</li>' +
                '</ul>' +
            '</div>' +
        '</div>')
}]), angular.module("mk.typeahead", ["mk.typeahead.tpl", "ui.bootstrap"]).directive("mkTypeahead", function () {
    return {
        templateUrl: "templates/mk.typeahead.tpl.html",
        scope: {
            model: "=ngModel",
            items: "&",
            itemLabel: "@",
            itemId: "@?",
            isNewItem: "=?",
            ngChange: "&"
        },
        replace: true,
        controller: ["$scope", "$q", function ($scope, $q) {
            if(!$scope.itemId){
                $scope.itemId = "id";
            }
            if(!$scope.model){
                $scope.model = {};
            }
            $q.when($scope.items())
                .then(function(opt) {
                    $scope.items = opt;
                });

            $scope.onSelect = function (item) {
                angular.extend($scope.model, item);
                $scope.model[$scope.itemLabel] = item[$scope.itemLabel];
                $scope.isNewItem = false;
                $scope.ngChange();
            }
            $scope.onChange = function (itemLabel) {
                $scope.model = {};
                $scope.model[$scope.itemLabel] = itemLabel;
                $scope.isNewItem = true;
                $scope.ngChange();
            }

        }]
    }
});